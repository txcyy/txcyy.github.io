3:I[9275,[],""]
6:I[1343,[],""]
7:I[9512,["257","static/chunks/257-d6408e43d3a4c1f7.js","231","static/chunks/231-75c2bb16e5311c25.js","185","static/chunks/app/layout-5aac403eda8ffac1.js"],"ThemeProvider"]
8:I[9890,["257","static/chunks/257-d6408e43d3a4c1f7.js","231","static/chunks/231-75c2bb16e5311c25.js","185","static/chunks/app/layout-5aac403eda8ffac1.js"],"ColorProvider"]
9:I[1998,["257","static/chunks/257-d6408e43d3a4c1f7.js","231","static/chunks/231-75c2bb16e5311c25.js","185","static/chunks/app/layout-5aac403eda8ffac1.js"],"default"]
a:I[3408,["257","static/chunks/257-d6408e43d3a4c1f7.js","231","static/chunks/231-75c2bb16e5311c25.js","185","static/chunks/app/layout-5aac403eda8ffac1.js"],"ColorToggle"]
b:I[6345,["257","static/chunks/257-d6408e43d3a4c1f7.js","231","static/chunks/231-75c2bb16e5311c25.js","185","static/chunks/app/layout-5aac403eda8ffac1.js"],"ThemeToggle"]
c:I[7970,["257","static/chunks/257-d6408e43d3a4c1f7.js","231","static/chunks/231-75c2bb16e5311c25.js","185","static/chunks/app/layout-5aac403eda8ffac1.js"],"NavToggle"]
4:["category","%E7%BD%91%E7%BB%9C","d"]
5:["title","http%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6%E5%8F%8A%E5%AE%9E%E8%B7%B5","d"]
0:["GB6GWdwB48S_6jQAbWqVr",[[["",{"children":["post",{"children":[["category","%E7%BD%91%E7%BB%9C","d"],{"children":[["title","http%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6%E5%8F%8A%E5%AE%9E%E8%B7%B5","d"],{"children":["__PAGE__?{\"category\":\"网络\",\"title\":\"http缓存机制及实践\"}",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":["post",{"children":[["category","%E7%BD%91%E7%BB%9C","d"],{"children":[["title","http%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6%E5%8F%8A%E5%AE%9E%E8%B7%B5","d"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","post","children","$4","children","$5","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/2715c8fee6b9b9b3.css","precedence":"next","crossOrigin":"$undefined"}]]}],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","post","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","post","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":["$","body",null,{"className":"min-h-screen bg-background font-sans antialiased __variable_aaf875","children":["$","$L7",null,{"attribute":"class","defaultTheme":"system","enableSystem":true,"disableTransitionOnChange":true,"children":["$","$L8",null,{"children":[["$","header",null,{"className":"sticky top-0 z-50 w-full border-b border-primary/40 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60","children":["$","div",null,{"className":"container flex h-14 max-w-screen-2xl items-center justify-between","children":[["$","div",null,{"className":"mr-4 flex","children":[["$","a",null,{"className":"mr-6 flex items-center space-x-2","href":"/","children":[["$","span",null,{"className":"inline-block w-8 h-8","children":["$","svg",null,{"viewBox":"0 0 64 64","children":["$","g",null,{"fill":"none","fillRule":"evenodd","children":[["$","circle",null,{"cx":32,"cy":32,"r":26,"fill":"hsl(var(--primary))"}],["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","xmlnsXlink":"http://www.w3.org/1999/xlink","width":26,"height":26,"x":19,"y":10,"viewBox":"0 0 24 24","children":["$","path",null,{"fill":"hsl(var(--background))","d":"M5.438 2c-.512 0-1.02.203-1.407.594L2.594 4.03a1.987 1.987 0 0 0 0 2.813l2.125 2.125C3.977 10.46 3.207 12.016 3 12.375c-.469.813-1 1.617-1 2.625 0 1.473.805 2.746 2 3.438.184.105 4.188 2.906 4.188 2.906h.03C8.896 21.75 9.66 22 10.5 22h3c.832 0 1.613-.223 2.281-.625.38-.227 4.031-2.664 5.219-3.75.688-.633 1-1.621 1-2.625s-.414-1.754-1-2.625c-.277-.43-1.023-1.96-1.719-3.406l2.125-2.125a1.987 1.987 0 0 0 0-2.813L19.97 2.594a1.987 1.987 0 0 0-2.813 0l-1.5 1.5A2.2 2.2 0 0 0 15 4H9a2.8 2.8 0 0 0-.656.094l-1.5-1.5A1.98 1.98 0 0 0 5.437 2M9.5 10a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3m5 0a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3M12 13.813c.395 0 .79.054 1 .187.95.59 3 2.883 3 4 0 .559-1.328 1.781-2 2-.953.309-3.047.309-4 0-.672-.219-2-1.441-2-2 0-1.117 2.05-3.41 3-4 .21-.133.605-.187 1-.187M11 17c-.363 0-.57.43-.312.688l1.03 1.218c.16.16.403.16.563 0l1.031-1.218C13.57 17.43 13.364 17 13 17Z"}]}],["$","text",null,{"fill":"hsl(var(--background))","data-text-alignment":"C","fontFamily":"Fira Mono","fontSize":14,"fontWeight":700,"letterSpacing":0.81,"transform":"translate(-4 33)","children":["$","tspan",null,{"x":17.07,"y":17,"children":"XCYY"}]}],["$","circle",null,{"cx":32,"cy":32,"r":30,"stroke":"hsl(var(--primary))","strokeWidth":2}]]}]}]}],["$","span",null,{"className":"text-primary","children":"新宸悦雨"}]]}],["$","$L9",null,{}]]}],["$","nav",null,{"className":"flex items-center space-x-2","children":[["$","$La",null,{}],["$","$Lb",null,{}],["$","div",null,{"className":"md:hidden","children":["$","$Lc",null,{}]}]]}]]}]}],["$","main",null,{"className":"container max-w-screen-2xl py-6","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}]]}]}]}]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/f8ad259a7d5c0bf2.css","precedence":"next","crossOrigin":"$undefined"}]],"$Ld"]]]]
e:I[789,["257","static/chunks/257-d6408e43d3a4c1f7.js","472","static/chunks/app/post/%5Bcategory%5D/%5Btitle%5D/page-bb1b5c27d30bc491.js"],"default"]
f:T163a,
<h1 id="http缓存机制">http缓存机制</h1>
<p>http缓存是通过重用已获取的资源，来达到让客户端更快的获取所需要的资源的目的。常见的 HTTP 缓存只能存储 GET 响应。</p>
<p>资源有很多，比如ajax请求的数据、html、js、css、png等等，那么哪些可以被缓存呢？？</p>
<p>根据缓存规则的不同（是否可以不需要重新发起请求），分为两类：强制缓存（强缓存），使用 <code>Expires</code>（响应头）、<code>Cache-Control</code>（请求头和响应头都支持）进行配置；对比缓存（协商缓存），使用 <code>Last-Modified</code>（响应头）和 <code>If-Modified-Since</code>（请求头），<code>Etag</code>（响应头）和 <code>If-None-Match</code>（请求头）设置；其中缓存匹配规则优先级为 <code>Cache-Control > Expires > (Last-Modified  &#x26; If-Modified-Since) > (Etag &#x26;&#x26; If-None-Match)</code></p>
<p>**缓存驱逐：**当一个资源被缓存存储后是不会直接被清除或忽略的，该资源应该可以被永久存储在缓存中。但是由于存储空间是有限的，所以会定期地将一些缓存删除，这个过程叫做缓存驱逐。缓存驱逐的策略是通过检查过期时间，判断缓存是否过期，如果缓存的资源过期，则需要进行缓存验证或者重新获取资源。</p>
<p>**缓存验证：**如果资源请求的响应头里含有 ETag, 客户端可以在后续的请求的头中带上 If-None-Match 头来验证缓存；如果响应头里含有 Last-Modified，客户端可以在后续的请求中带上 If-Modified-Since 来验证缓存。验证后，如果缓存的资源并未改变，则返回304响应，否则返回200响应，并在响应body中添加响应资源的内容。</p>
<p>请求示意图？？</p>
<h2 id="expires">Expires</h2>
<p>Expires的值是服务器设置的一个到期时间，返回到客户端。然后在下一次请求时，客户端先判断是否有缓存，有则判断当前时间是否大于到期时间，大于到期时间则缓存匹配失败。否则直接使用缓存，不发请求到服务器。</p>
<p>**不足：**由于到期时间是有服务器设置的，而进行时间比较时使用的当前时间是客户端的系统时间，那么当服务器时间与客户端时间不一致时，会导致缓存匹配存在误差。</p>
<p><code>Expires</code> 是由HTTP 1.0版本规定的，由于存在以上问题，所以在HTTP 1.1版本中使用Cache-Control作为替代方案。</p>
<h2 id="cache-control">Cache-Control</h2>
<p><code>Cache-Control</code> 同时存在于请求头和响应头，可以设置以下值：</p>
<ul>
<li>no-store：禁止进行缓存，每次都由客户端发起的请求都会下载完整的响应内容</li>
<li>no-cache：强制确认缓存，每次有请求发出时，缓存会将此请求（带有本地缓存相关的验证字段）发到服务器，服务器端会验证请求中所描述的缓存是否过期，若未过期返回304响应，客户端使用本地缓存副本，否则将有服务器返回完整内容。</li>
<li>private：私有缓存，表示该响应是专用于某单个用户的，中间人不能缓存此响应，该响应只能应用于浏览器私有缓存中。</li>
<li>public：表示该响应可以被任何中间人，比如中间代理、CDN等缓存。一些通常不被中间人缓存的页面（因为默认是private），比如 带有HTTP验证信息（帐号密码）的页面 或 某些特定状态码的页面，将会被其缓存。</li>
<li>max-age：缓存过期机制，表示资源能够被缓存（保持新鲜）的最大时间，单位是秒。</li>
<li>must-revalidate：缓存验证确认，表示在使用缓存之前必须先验证它的状态，已过期的缓存将不被使用。</li>
</ul>
<h2 id="last-modified---if-modified-since">Last-Modified  &#x26; If-Modified-Since</h2>
<p>Last-Modified的值是服务器最后修改资源的时间，If-Modified-Since是上次响应中的Last-Modified的值。</p>
<p>**验证过程简述：**为第一次请求资源，服务器返回响应头带有Last-Modified头，第二次请求资源，请求头上带上If-Modified-Since头，值为上一次请求返回的Last-Modified的值，服务器接收到请求后，对比If-Modified-Since头的值与该资源的最后修改时间，如果资源最后修改时间大于If-Modified-Since头的值，则说明资源已过期，返回200响应，并在响应body带上资源内容，否则返回304响应，客户端继续使用缓存。</p>
<p>**不足：**由于文件最后修改时间比较是以秒为单位的，因此有时候可能出现在1秒内资源被多次修改，则导致缓存的资源不准确；而且有点时候资源被修改了，但是内容被没有变化，也会导致缓存不可用。</p>
<p>由于存在以上问题，因此在HTTP/1.1中引入ETag/If-Not-Match。</p>
<h2 id="etag--if-none-match">Etag &#x26;&#x26; If-None-Match</h2>
<p>ETag的值是一个唯一标识资源内容的hash值（如md5），If-Not-Match的值是上次响应中的Etag值</p>
<p>**验证过程简述：**为第一次请求资源，服务器返回响应头带有Etag头，第二次请求资源，请求头上带上If-Not-Match头，值为上一次请求返回的Etag的值，服务器接收到请求后，对比If-Not-Match头的值与该资源目前计算出的hash值进行比较，如果两个hash值不相等，则说明资源已过期，返回200响应，并在响应body带上资源内容，否则返回304响应，客户端继续使用缓存。</p>
<h1 id="nginx实践">nginx实践</h1>
<h1 id="nodejs实践">nodejs实践</h1>2:["$","div",null,{"children":[["$","h1",null,{"className":"text-3xl font-semibold","children":"http缓存机制及实践"}],["$","div",null,{"className":"fixed right-12 bottom-20 ","children":["$","$Le",null,{"toc":"\n<ul>\n<li><a href=\"#http%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6\">http缓存机制</a>\n<ul>\n<li><a href=\"#expires\">Expires</a></li>\n<li><a href=\"#cache-control\">Cache-Control</a></li>\n<li><a href=\"#last-modified---if-modified-since\">Last-Modified  &#x26; If-Modified-Since</a></li>\n<li><a href=\"#etag--if-none-match\">Etag &#x26;&#x26; If-None-Match</a></li>\n</ul>\n</li>\n<li><a href=\"#nginx%E5%AE%9E%E8%B7%B5\">nginx实践</a></li>\n<li><a href=\"#nodejs%E5%AE%9E%E8%B7%B5\">nodejs实践</a></li>\n</ul>"}]}],["$","div",null,{"className":"page_content__nM6Lc","dangerouslySetInnerHTML":{"__html":"$f"}}]]}]
d:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"文章 | http缓存机制及实践"}],["$","meta","3",{"name":"description","content":"新宸悦雨 博客 网站 个人网站"}],["$","meta","4",{"name":"google-site-verification","content":"LiZ4kQwHGTLadwCnDnrXngpwNqoQjmFOCOVTtr_PWVo"}],["$","link","5",{"rel":"icon","href":"/icon.svg?d2cf70afa15ddfd8","type":"image/svg+xml","sizes":"any"}]]
1:null
